#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_448016370503331297) {
   out_448016370503331297[0] = 0;
   out_448016370503331297[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_448016370503331297[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_448016370503331297[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_448016370503331297[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_448016370503331297[5] = -sin(in_vec[1]);
   out_448016370503331297[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_448016370503331297[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_448016370503331297[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_448016370503331297[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_448016370503331297[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_448016370503331297[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_448016370503331297[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_448016370503331297[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_448016370503331297[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_448016370503331297[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_448016370503331297[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_448016370503331297[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1664245642397186294) {
   out_1664245642397186294[0] = delta_x[0] + nom_x[0];
   out_1664245642397186294[1] = delta_x[1] + nom_x[1];
   out_1664245642397186294[2] = delta_x[2] + nom_x[2];
   out_1664245642397186294[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1664245642397186294[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1664245642397186294[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1664245642397186294[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1664245642397186294[7] = delta_x[6] + nom_x[7];
   out_1664245642397186294[8] = delta_x[7] + nom_x[8];
   out_1664245642397186294[9] = delta_x[8] + nom_x[9];
   out_1664245642397186294[10] = delta_x[9] + nom_x[10];
   out_1664245642397186294[11] = delta_x[10] + nom_x[11];
   out_1664245642397186294[12] = delta_x[11] + nom_x[12];
   out_1664245642397186294[13] = delta_x[12] + nom_x[13];
   out_1664245642397186294[14] = delta_x[13] + nom_x[14];
   out_1664245642397186294[15] = delta_x[14] + nom_x[15];
   out_1664245642397186294[16] = delta_x[15] + nom_x[16];
   out_1664245642397186294[17] = delta_x[16] + nom_x[17];
   out_1664245642397186294[18] = delta_x[17] + nom_x[18];
   out_1664245642397186294[19] = delta_x[18] + nom_x[19];
   out_1664245642397186294[20] = delta_x[19] + nom_x[20];
   out_1664245642397186294[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7089911323146907467) {
   out_7089911323146907467[0] = -nom_x[0] + true_x[0];
   out_7089911323146907467[1] = -nom_x[1] + true_x[1];
   out_7089911323146907467[2] = -nom_x[2] + true_x[2];
   out_7089911323146907467[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7089911323146907467[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7089911323146907467[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7089911323146907467[6] = -nom_x[7] + true_x[7];
   out_7089911323146907467[7] = -nom_x[8] + true_x[8];
   out_7089911323146907467[8] = -nom_x[9] + true_x[9];
   out_7089911323146907467[9] = -nom_x[10] + true_x[10];
   out_7089911323146907467[10] = -nom_x[11] + true_x[11];
   out_7089911323146907467[11] = -nom_x[12] + true_x[12];
   out_7089911323146907467[12] = -nom_x[13] + true_x[13];
   out_7089911323146907467[13] = -nom_x[14] + true_x[14];
   out_7089911323146907467[14] = -nom_x[15] + true_x[15];
   out_7089911323146907467[15] = -nom_x[16] + true_x[16];
   out_7089911323146907467[16] = -nom_x[17] + true_x[17];
   out_7089911323146907467[17] = -nom_x[18] + true_x[18];
   out_7089911323146907467[18] = -nom_x[19] + true_x[19];
   out_7089911323146907467[19] = -nom_x[20] + true_x[20];
   out_7089911323146907467[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6934058908312638129) {
   out_6934058908312638129[0] = 1.0;
   out_6934058908312638129[1] = 0;
   out_6934058908312638129[2] = 0;
   out_6934058908312638129[3] = 0;
   out_6934058908312638129[4] = 0;
   out_6934058908312638129[5] = 0;
   out_6934058908312638129[6] = 0;
   out_6934058908312638129[7] = 0;
   out_6934058908312638129[8] = 0;
   out_6934058908312638129[9] = 0;
   out_6934058908312638129[10] = 0;
   out_6934058908312638129[11] = 0;
   out_6934058908312638129[12] = 0;
   out_6934058908312638129[13] = 0;
   out_6934058908312638129[14] = 0;
   out_6934058908312638129[15] = 0;
   out_6934058908312638129[16] = 0;
   out_6934058908312638129[17] = 0;
   out_6934058908312638129[18] = 0;
   out_6934058908312638129[19] = 0;
   out_6934058908312638129[20] = 0;
   out_6934058908312638129[21] = 0;
   out_6934058908312638129[22] = 1.0;
   out_6934058908312638129[23] = 0;
   out_6934058908312638129[24] = 0;
   out_6934058908312638129[25] = 0;
   out_6934058908312638129[26] = 0;
   out_6934058908312638129[27] = 0;
   out_6934058908312638129[28] = 0;
   out_6934058908312638129[29] = 0;
   out_6934058908312638129[30] = 0;
   out_6934058908312638129[31] = 0;
   out_6934058908312638129[32] = 0;
   out_6934058908312638129[33] = 0;
   out_6934058908312638129[34] = 0;
   out_6934058908312638129[35] = 0;
   out_6934058908312638129[36] = 0;
   out_6934058908312638129[37] = 0;
   out_6934058908312638129[38] = 0;
   out_6934058908312638129[39] = 0;
   out_6934058908312638129[40] = 0;
   out_6934058908312638129[41] = 0;
   out_6934058908312638129[42] = 0;
   out_6934058908312638129[43] = 0;
   out_6934058908312638129[44] = 1.0;
   out_6934058908312638129[45] = 0;
   out_6934058908312638129[46] = 0;
   out_6934058908312638129[47] = 0;
   out_6934058908312638129[48] = 0;
   out_6934058908312638129[49] = 0;
   out_6934058908312638129[50] = 0;
   out_6934058908312638129[51] = 0;
   out_6934058908312638129[52] = 0;
   out_6934058908312638129[53] = 0;
   out_6934058908312638129[54] = 0;
   out_6934058908312638129[55] = 0;
   out_6934058908312638129[56] = 0;
   out_6934058908312638129[57] = 0;
   out_6934058908312638129[58] = 0;
   out_6934058908312638129[59] = 0;
   out_6934058908312638129[60] = 0;
   out_6934058908312638129[61] = 0;
   out_6934058908312638129[62] = 0;
   out_6934058908312638129[63] = 0;
   out_6934058908312638129[64] = 0;
   out_6934058908312638129[65] = 0;
   out_6934058908312638129[66] = -0.5*state[4];
   out_6934058908312638129[67] = -0.5*state[5];
   out_6934058908312638129[68] = -0.5*state[6];
   out_6934058908312638129[69] = 0;
   out_6934058908312638129[70] = 0;
   out_6934058908312638129[71] = 0;
   out_6934058908312638129[72] = 0;
   out_6934058908312638129[73] = 0;
   out_6934058908312638129[74] = 0;
   out_6934058908312638129[75] = 0;
   out_6934058908312638129[76] = 0;
   out_6934058908312638129[77] = 0;
   out_6934058908312638129[78] = 0;
   out_6934058908312638129[79] = 0;
   out_6934058908312638129[80] = 0;
   out_6934058908312638129[81] = 0;
   out_6934058908312638129[82] = 0;
   out_6934058908312638129[83] = 0;
   out_6934058908312638129[84] = 0;
   out_6934058908312638129[85] = 0;
   out_6934058908312638129[86] = 0;
   out_6934058908312638129[87] = 0.5*state[3];
   out_6934058908312638129[88] = 0.5*state[6];
   out_6934058908312638129[89] = -0.5*state[5];
   out_6934058908312638129[90] = 0;
   out_6934058908312638129[91] = 0;
   out_6934058908312638129[92] = 0;
   out_6934058908312638129[93] = 0;
   out_6934058908312638129[94] = 0;
   out_6934058908312638129[95] = 0;
   out_6934058908312638129[96] = 0;
   out_6934058908312638129[97] = 0;
   out_6934058908312638129[98] = 0;
   out_6934058908312638129[99] = 0;
   out_6934058908312638129[100] = 0;
   out_6934058908312638129[101] = 0;
   out_6934058908312638129[102] = 0;
   out_6934058908312638129[103] = 0;
   out_6934058908312638129[104] = 0;
   out_6934058908312638129[105] = 0;
   out_6934058908312638129[106] = 0;
   out_6934058908312638129[107] = 0;
   out_6934058908312638129[108] = -0.5*state[6];
   out_6934058908312638129[109] = 0.5*state[3];
   out_6934058908312638129[110] = 0.5*state[4];
   out_6934058908312638129[111] = 0;
   out_6934058908312638129[112] = 0;
   out_6934058908312638129[113] = 0;
   out_6934058908312638129[114] = 0;
   out_6934058908312638129[115] = 0;
   out_6934058908312638129[116] = 0;
   out_6934058908312638129[117] = 0;
   out_6934058908312638129[118] = 0;
   out_6934058908312638129[119] = 0;
   out_6934058908312638129[120] = 0;
   out_6934058908312638129[121] = 0;
   out_6934058908312638129[122] = 0;
   out_6934058908312638129[123] = 0;
   out_6934058908312638129[124] = 0;
   out_6934058908312638129[125] = 0;
   out_6934058908312638129[126] = 0;
   out_6934058908312638129[127] = 0;
   out_6934058908312638129[128] = 0;
   out_6934058908312638129[129] = 0.5*state[5];
   out_6934058908312638129[130] = -0.5*state[4];
   out_6934058908312638129[131] = 0.5*state[3];
   out_6934058908312638129[132] = 0;
   out_6934058908312638129[133] = 0;
   out_6934058908312638129[134] = 0;
   out_6934058908312638129[135] = 0;
   out_6934058908312638129[136] = 0;
   out_6934058908312638129[137] = 0;
   out_6934058908312638129[138] = 0;
   out_6934058908312638129[139] = 0;
   out_6934058908312638129[140] = 0;
   out_6934058908312638129[141] = 0;
   out_6934058908312638129[142] = 0;
   out_6934058908312638129[143] = 0;
   out_6934058908312638129[144] = 0;
   out_6934058908312638129[145] = 0;
   out_6934058908312638129[146] = 0;
   out_6934058908312638129[147] = 0;
   out_6934058908312638129[148] = 0;
   out_6934058908312638129[149] = 0;
   out_6934058908312638129[150] = 0;
   out_6934058908312638129[151] = 0;
   out_6934058908312638129[152] = 0;
   out_6934058908312638129[153] = 1.0;
   out_6934058908312638129[154] = 0;
   out_6934058908312638129[155] = 0;
   out_6934058908312638129[156] = 0;
   out_6934058908312638129[157] = 0;
   out_6934058908312638129[158] = 0;
   out_6934058908312638129[159] = 0;
   out_6934058908312638129[160] = 0;
   out_6934058908312638129[161] = 0;
   out_6934058908312638129[162] = 0;
   out_6934058908312638129[163] = 0;
   out_6934058908312638129[164] = 0;
   out_6934058908312638129[165] = 0;
   out_6934058908312638129[166] = 0;
   out_6934058908312638129[167] = 0;
   out_6934058908312638129[168] = 0;
   out_6934058908312638129[169] = 0;
   out_6934058908312638129[170] = 0;
   out_6934058908312638129[171] = 0;
   out_6934058908312638129[172] = 0;
   out_6934058908312638129[173] = 0;
   out_6934058908312638129[174] = 0;
   out_6934058908312638129[175] = 1.0;
   out_6934058908312638129[176] = 0;
   out_6934058908312638129[177] = 0;
   out_6934058908312638129[178] = 0;
   out_6934058908312638129[179] = 0;
   out_6934058908312638129[180] = 0;
   out_6934058908312638129[181] = 0;
   out_6934058908312638129[182] = 0;
   out_6934058908312638129[183] = 0;
   out_6934058908312638129[184] = 0;
   out_6934058908312638129[185] = 0;
   out_6934058908312638129[186] = 0;
   out_6934058908312638129[187] = 0;
   out_6934058908312638129[188] = 0;
   out_6934058908312638129[189] = 0;
   out_6934058908312638129[190] = 0;
   out_6934058908312638129[191] = 0;
   out_6934058908312638129[192] = 0;
   out_6934058908312638129[193] = 0;
   out_6934058908312638129[194] = 0;
   out_6934058908312638129[195] = 0;
   out_6934058908312638129[196] = 0;
   out_6934058908312638129[197] = 1.0;
   out_6934058908312638129[198] = 0;
   out_6934058908312638129[199] = 0;
   out_6934058908312638129[200] = 0;
   out_6934058908312638129[201] = 0;
   out_6934058908312638129[202] = 0;
   out_6934058908312638129[203] = 0;
   out_6934058908312638129[204] = 0;
   out_6934058908312638129[205] = 0;
   out_6934058908312638129[206] = 0;
   out_6934058908312638129[207] = 0;
   out_6934058908312638129[208] = 0;
   out_6934058908312638129[209] = 0;
   out_6934058908312638129[210] = 0;
   out_6934058908312638129[211] = 0;
   out_6934058908312638129[212] = 0;
   out_6934058908312638129[213] = 0;
   out_6934058908312638129[214] = 0;
   out_6934058908312638129[215] = 0;
   out_6934058908312638129[216] = 0;
   out_6934058908312638129[217] = 0;
   out_6934058908312638129[218] = 0;
   out_6934058908312638129[219] = 1.0;
   out_6934058908312638129[220] = 0;
   out_6934058908312638129[221] = 0;
   out_6934058908312638129[222] = 0;
   out_6934058908312638129[223] = 0;
   out_6934058908312638129[224] = 0;
   out_6934058908312638129[225] = 0;
   out_6934058908312638129[226] = 0;
   out_6934058908312638129[227] = 0;
   out_6934058908312638129[228] = 0;
   out_6934058908312638129[229] = 0;
   out_6934058908312638129[230] = 0;
   out_6934058908312638129[231] = 0;
   out_6934058908312638129[232] = 0;
   out_6934058908312638129[233] = 0;
   out_6934058908312638129[234] = 0;
   out_6934058908312638129[235] = 0;
   out_6934058908312638129[236] = 0;
   out_6934058908312638129[237] = 0;
   out_6934058908312638129[238] = 0;
   out_6934058908312638129[239] = 0;
   out_6934058908312638129[240] = 0;
   out_6934058908312638129[241] = 1.0;
   out_6934058908312638129[242] = 0;
   out_6934058908312638129[243] = 0;
   out_6934058908312638129[244] = 0;
   out_6934058908312638129[245] = 0;
   out_6934058908312638129[246] = 0;
   out_6934058908312638129[247] = 0;
   out_6934058908312638129[248] = 0;
   out_6934058908312638129[249] = 0;
   out_6934058908312638129[250] = 0;
   out_6934058908312638129[251] = 0;
   out_6934058908312638129[252] = 0;
   out_6934058908312638129[253] = 0;
   out_6934058908312638129[254] = 0;
   out_6934058908312638129[255] = 0;
   out_6934058908312638129[256] = 0;
   out_6934058908312638129[257] = 0;
   out_6934058908312638129[258] = 0;
   out_6934058908312638129[259] = 0;
   out_6934058908312638129[260] = 0;
   out_6934058908312638129[261] = 0;
   out_6934058908312638129[262] = 0;
   out_6934058908312638129[263] = 1.0;
   out_6934058908312638129[264] = 0;
   out_6934058908312638129[265] = 0;
   out_6934058908312638129[266] = 0;
   out_6934058908312638129[267] = 0;
   out_6934058908312638129[268] = 0;
   out_6934058908312638129[269] = 0;
   out_6934058908312638129[270] = 0;
   out_6934058908312638129[271] = 0;
   out_6934058908312638129[272] = 0;
   out_6934058908312638129[273] = 0;
   out_6934058908312638129[274] = 0;
   out_6934058908312638129[275] = 0;
   out_6934058908312638129[276] = 0;
   out_6934058908312638129[277] = 0;
   out_6934058908312638129[278] = 0;
   out_6934058908312638129[279] = 0;
   out_6934058908312638129[280] = 0;
   out_6934058908312638129[281] = 0;
   out_6934058908312638129[282] = 0;
   out_6934058908312638129[283] = 0;
   out_6934058908312638129[284] = 0;
   out_6934058908312638129[285] = 1.0;
   out_6934058908312638129[286] = 0;
   out_6934058908312638129[287] = 0;
   out_6934058908312638129[288] = 0;
   out_6934058908312638129[289] = 0;
   out_6934058908312638129[290] = 0;
   out_6934058908312638129[291] = 0;
   out_6934058908312638129[292] = 0;
   out_6934058908312638129[293] = 0;
   out_6934058908312638129[294] = 0;
   out_6934058908312638129[295] = 0;
   out_6934058908312638129[296] = 0;
   out_6934058908312638129[297] = 0;
   out_6934058908312638129[298] = 0;
   out_6934058908312638129[299] = 0;
   out_6934058908312638129[300] = 0;
   out_6934058908312638129[301] = 0;
   out_6934058908312638129[302] = 0;
   out_6934058908312638129[303] = 0;
   out_6934058908312638129[304] = 0;
   out_6934058908312638129[305] = 0;
   out_6934058908312638129[306] = 0;
   out_6934058908312638129[307] = 1.0;
   out_6934058908312638129[308] = 0;
   out_6934058908312638129[309] = 0;
   out_6934058908312638129[310] = 0;
   out_6934058908312638129[311] = 0;
   out_6934058908312638129[312] = 0;
   out_6934058908312638129[313] = 0;
   out_6934058908312638129[314] = 0;
   out_6934058908312638129[315] = 0;
   out_6934058908312638129[316] = 0;
   out_6934058908312638129[317] = 0;
   out_6934058908312638129[318] = 0;
   out_6934058908312638129[319] = 0;
   out_6934058908312638129[320] = 0;
   out_6934058908312638129[321] = 0;
   out_6934058908312638129[322] = 0;
   out_6934058908312638129[323] = 0;
   out_6934058908312638129[324] = 0;
   out_6934058908312638129[325] = 0;
   out_6934058908312638129[326] = 0;
   out_6934058908312638129[327] = 0;
   out_6934058908312638129[328] = 0;
   out_6934058908312638129[329] = 1.0;
   out_6934058908312638129[330] = 0;
   out_6934058908312638129[331] = 0;
   out_6934058908312638129[332] = 0;
   out_6934058908312638129[333] = 0;
   out_6934058908312638129[334] = 0;
   out_6934058908312638129[335] = 0;
   out_6934058908312638129[336] = 0;
   out_6934058908312638129[337] = 0;
   out_6934058908312638129[338] = 0;
   out_6934058908312638129[339] = 0;
   out_6934058908312638129[340] = 0;
   out_6934058908312638129[341] = 0;
   out_6934058908312638129[342] = 0;
   out_6934058908312638129[343] = 0;
   out_6934058908312638129[344] = 0;
   out_6934058908312638129[345] = 0;
   out_6934058908312638129[346] = 0;
   out_6934058908312638129[347] = 0;
   out_6934058908312638129[348] = 0;
   out_6934058908312638129[349] = 0;
   out_6934058908312638129[350] = 0;
   out_6934058908312638129[351] = 1.0;
   out_6934058908312638129[352] = 0;
   out_6934058908312638129[353] = 0;
   out_6934058908312638129[354] = 0;
   out_6934058908312638129[355] = 0;
   out_6934058908312638129[356] = 0;
   out_6934058908312638129[357] = 0;
   out_6934058908312638129[358] = 0;
   out_6934058908312638129[359] = 0;
   out_6934058908312638129[360] = 0;
   out_6934058908312638129[361] = 0;
   out_6934058908312638129[362] = 0;
   out_6934058908312638129[363] = 0;
   out_6934058908312638129[364] = 0;
   out_6934058908312638129[365] = 0;
   out_6934058908312638129[366] = 0;
   out_6934058908312638129[367] = 0;
   out_6934058908312638129[368] = 0;
   out_6934058908312638129[369] = 0;
   out_6934058908312638129[370] = 0;
   out_6934058908312638129[371] = 0;
   out_6934058908312638129[372] = 0;
   out_6934058908312638129[373] = 1.0;
   out_6934058908312638129[374] = 0;
   out_6934058908312638129[375] = 0;
   out_6934058908312638129[376] = 0;
   out_6934058908312638129[377] = 0;
   out_6934058908312638129[378] = 0;
   out_6934058908312638129[379] = 0;
   out_6934058908312638129[380] = 0;
   out_6934058908312638129[381] = 0;
   out_6934058908312638129[382] = 0;
   out_6934058908312638129[383] = 0;
   out_6934058908312638129[384] = 0;
   out_6934058908312638129[385] = 0;
   out_6934058908312638129[386] = 0;
   out_6934058908312638129[387] = 0;
   out_6934058908312638129[388] = 0;
   out_6934058908312638129[389] = 0;
   out_6934058908312638129[390] = 0;
   out_6934058908312638129[391] = 0;
   out_6934058908312638129[392] = 0;
   out_6934058908312638129[393] = 0;
   out_6934058908312638129[394] = 0;
   out_6934058908312638129[395] = 1.0;
   out_6934058908312638129[396] = 0;
   out_6934058908312638129[397] = 0;
   out_6934058908312638129[398] = 0;
   out_6934058908312638129[399] = 0;
   out_6934058908312638129[400] = 0;
   out_6934058908312638129[401] = 0;
   out_6934058908312638129[402] = 0;
   out_6934058908312638129[403] = 0;
   out_6934058908312638129[404] = 0;
   out_6934058908312638129[405] = 0;
   out_6934058908312638129[406] = 0;
   out_6934058908312638129[407] = 0;
   out_6934058908312638129[408] = 0;
   out_6934058908312638129[409] = 0;
   out_6934058908312638129[410] = 0;
   out_6934058908312638129[411] = 0;
   out_6934058908312638129[412] = 0;
   out_6934058908312638129[413] = 0;
   out_6934058908312638129[414] = 0;
   out_6934058908312638129[415] = 0;
   out_6934058908312638129[416] = 0;
   out_6934058908312638129[417] = 1.0;
   out_6934058908312638129[418] = 0;
   out_6934058908312638129[419] = 0;
   out_6934058908312638129[420] = 0;
   out_6934058908312638129[421] = 0;
   out_6934058908312638129[422] = 0;
   out_6934058908312638129[423] = 0;
   out_6934058908312638129[424] = 0;
   out_6934058908312638129[425] = 0;
   out_6934058908312638129[426] = 0;
   out_6934058908312638129[427] = 0;
   out_6934058908312638129[428] = 0;
   out_6934058908312638129[429] = 0;
   out_6934058908312638129[430] = 0;
   out_6934058908312638129[431] = 0;
   out_6934058908312638129[432] = 0;
   out_6934058908312638129[433] = 0;
   out_6934058908312638129[434] = 0;
   out_6934058908312638129[435] = 0;
   out_6934058908312638129[436] = 0;
   out_6934058908312638129[437] = 0;
   out_6934058908312638129[438] = 0;
   out_6934058908312638129[439] = 1.0;
   out_6934058908312638129[440] = 0;
   out_6934058908312638129[441] = 0;
   out_6934058908312638129[442] = 0;
   out_6934058908312638129[443] = 0;
   out_6934058908312638129[444] = 0;
   out_6934058908312638129[445] = 0;
   out_6934058908312638129[446] = 0;
   out_6934058908312638129[447] = 0;
   out_6934058908312638129[448] = 0;
   out_6934058908312638129[449] = 0;
   out_6934058908312638129[450] = 0;
   out_6934058908312638129[451] = 0;
   out_6934058908312638129[452] = 0;
   out_6934058908312638129[453] = 0;
   out_6934058908312638129[454] = 0;
   out_6934058908312638129[455] = 0;
   out_6934058908312638129[456] = 0;
   out_6934058908312638129[457] = 0;
   out_6934058908312638129[458] = 0;
   out_6934058908312638129[459] = 0;
   out_6934058908312638129[460] = 0;
   out_6934058908312638129[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2052326614994539115) {
   out_2052326614994539115[0] = dt*state[7] + state[0];
   out_2052326614994539115[1] = dt*state[8] + state[1];
   out_2052326614994539115[2] = dt*state[9] + state[2];
   out_2052326614994539115[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2052326614994539115[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2052326614994539115[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2052326614994539115[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2052326614994539115[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2052326614994539115[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2052326614994539115[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2052326614994539115[10] = state[10];
   out_2052326614994539115[11] = state[11];
   out_2052326614994539115[12] = state[12];
   out_2052326614994539115[13] = state[13];
   out_2052326614994539115[14] = state[14];
   out_2052326614994539115[15] = state[15];
   out_2052326614994539115[16] = state[16];
   out_2052326614994539115[17] = state[17];
   out_2052326614994539115[18] = state[18];
   out_2052326614994539115[19] = state[19];
   out_2052326614994539115[20] = state[20];
   out_2052326614994539115[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3700548427962440926) {
   out_3700548427962440926[0] = 1;
   out_3700548427962440926[1] = 0;
   out_3700548427962440926[2] = 0;
   out_3700548427962440926[3] = 0;
   out_3700548427962440926[4] = 0;
   out_3700548427962440926[5] = 0;
   out_3700548427962440926[6] = dt;
   out_3700548427962440926[7] = 0;
   out_3700548427962440926[8] = 0;
   out_3700548427962440926[9] = 0;
   out_3700548427962440926[10] = 0;
   out_3700548427962440926[11] = 0;
   out_3700548427962440926[12] = 0;
   out_3700548427962440926[13] = 0;
   out_3700548427962440926[14] = 0;
   out_3700548427962440926[15] = 0;
   out_3700548427962440926[16] = 0;
   out_3700548427962440926[17] = 0;
   out_3700548427962440926[18] = 0;
   out_3700548427962440926[19] = 0;
   out_3700548427962440926[20] = 0;
   out_3700548427962440926[21] = 0;
   out_3700548427962440926[22] = 1;
   out_3700548427962440926[23] = 0;
   out_3700548427962440926[24] = 0;
   out_3700548427962440926[25] = 0;
   out_3700548427962440926[26] = 0;
   out_3700548427962440926[27] = 0;
   out_3700548427962440926[28] = dt;
   out_3700548427962440926[29] = 0;
   out_3700548427962440926[30] = 0;
   out_3700548427962440926[31] = 0;
   out_3700548427962440926[32] = 0;
   out_3700548427962440926[33] = 0;
   out_3700548427962440926[34] = 0;
   out_3700548427962440926[35] = 0;
   out_3700548427962440926[36] = 0;
   out_3700548427962440926[37] = 0;
   out_3700548427962440926[38] = 0;
   out_3700548427962440926[39] = 0;
   out_3700548427962440926[40] = 0;
   out_3700548427962440926[41] = 0;
   out_3700548427962440926[42] = 0;
   out_3700548427962440926[43] = 0;
   out_3700548427962440926[44] = 1;
   out_3700548427962440926[45] = 0;
   out_3700548427962440926[46] = 0;
   out_3700548427962440926[47] = 0;
   out_3700548427962440926[48] = 0;
   out_3700548427962440926[49] = 0;
   out_3700548427962440926[50] = dt;
   out_3700548427962440926[51] = 0;
   out_3700548427962440926[52] = 0;
   out_3700548427962440926[53] = 0;
   out_3700548427962440926[54] = 0;
   out_3700548427962440926[55] = 0;
   out_3700548427962440926[56] = 0;
   out_3700548427962440926[57] = 0;
   out_3700548427962440926[58] = 0;
   out_3700548427962440926[59] = 0;
   out_3700548427962440926[60] = 0;
   out_3700548427962440926[61] = 0;
   out_3700548427962440926[62] = 0;
   out_3700548427962440926[63] = 0;
   out_3700548427962440926[64] = 0;
   out_3700548427962440926[65] = 0;
   out_3700548427962440926[66] = 1;
   out_3700548427962440926[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3700548427962440926[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3700548427962440926[69] = 0;
   out_3700548427962440926[70] = 0;
   out_3700548427962440926[71] = 0;
   out_3700548427962440926[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3700548427962440926[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3700548427962440926[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3700548427962440926[75] = 0;
   out_3700548427962440926[76] = 0;
   out_3700548427962440926[77] = 0;
   out_3700548427962440926[78] = 0;
   out_3700548427962440926[79] = 0;
   out_3700548427962440926[80] = 0;
   out_3700548427962440926[81] = 0;
   out_3700548427962440926[82] = 0;
   out_3700548427962440926[83] = 0;
   out_3700548427962440926[84] = 0;
   out_3700548427962440926[85] = 0;
   out_3700548427962440926[86] = 0;
   out_3700548427962440926[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3700548427962440926[88] = 1;
   out_3700548427962440926[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3700548427962440926[90] = 0;
   out_3700548427962440926[91] = 0;
   out_3700548427962440926[92] = 0;
   out_3700548427962440926[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3700548427962440926[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3700548427962440926[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3700548427962440926[96] = 0;
   out_3700548427962440926[97] = 0;
   out_3700548427962440926[98] = 0;
   out_3700548427962440926[99] = 0;
   out_3700548427962440926[100] = 0;
   out_3700548427962440926[101] = 0;
   out_3700548427962440926[102] = 0;
   out_3700548427962440926[103] = 0;
   out_3700548427962440926[104] = 0;
   out_3700548427962440926[105] = 0;
   out_3700548427962440926[106] = 0;
   out_3700548427962440926[107] = 0;
   out_3700548427962440926[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3700548427962440926[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3700548427962440926[110] = 1;
   out_3700548427962440926[111] = 0;
   out_3700548427962440926[112] = 0;
   out_3700548427962440926[113] = 0;
   out_3700548427962440926[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3700548427962440926[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3700548427962440926[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3700548427962440926[117] = 0;
   out_3700548427962440926[118] = 0;
   out_3700548427962440926[119] = 0;
   out_3700548427962440926[120] = 0;
   out_3700548427962440926[121] = 0;
   out_3700548427962440926[122] = 0;
   out_3700548427962440926[123] = 0;
   out_3700548427962440926[124] = 0;
   out_3700548427962440926[125] = 0;
   out_3700548427962440926[126] = 0;
   out_3700548427962440926[127] = 0;
   out_3700548427962440926[128] = 0;
   out_3700548427962440926[129] = 0;
   out_3700548427962440926[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3700548427962440926[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3700548427962440926[132] = 1;
   out_3700548427962440926[133] = 0;
   out_3700548427962440926[134] = 0;
   out_3700548427962440926[135] = 0;
   out_3700548427962440926[136] = 0;
   out_3700548427962440926[137] = 0;
   out_3700548427962440926[138] = 0;
   out_3700548427962440926[139] = 0;
   out_3700548427962440926[140] = 0;
   out_3700548427962440926[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3700548427962440926[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3700548427962440926[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3700548427962440926[144] = 0;
   out_3700548427962440926[145] = 0;
   out_3700548427962440926[146] = 0;
   out_3700548427962440926[147] = 0;
   out_3700548427962440926[148] = 0;
   out_3700548427962440926[149] = 0;
   out_3700548427962440926[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3700548427962440926[151] = 0;
   out_3700548427962440926[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3700548427962440926[153] = 0;
   out_3700548427962440926[154] = 1;
   out_3700548427962440926[155] = 0;
   out_3700548427962440926[156] = 0;
   out_3700548427962440926[157] = 0;
   out_3700548427962440926[158] = 0;
   out_3700548427962440926[159] = 0;
   out_3700548427962440926[160] = 0;
   out_3700548427962440926[161] = 0;
   out_3700548427962440926[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3700548427962440926[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3700548427962440926[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3700548427962440926[165] = 0;
   out_3700548427962440926[166] = 0;
   out_3700548427962440926[167] = 0;
   out_3700548427962440926[168] = 0;
   out_3700548427962440926[169] = 0;
   out_3700548427962440926[170] = 0;
   out_3700548427962440926[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3700548427962440926[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3700548427962440926[173] = 0;
   out_3700548427962440926[174] = 0;
   out_3700548427962440926[175] = 0;
   out_3700548427962440926[176] = 1;
   out_3700548427962440926[177] = 0;
   out_3700548427962440926[178] = 0;
   out_3700548427962440926[179] = 0;
   out_3700548427962440926[180] = 0;
   out_3700548427962440926[181] = 0;
   out_3700548427962440926[182] = 0;
   out_3700548427962440926[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3700548427962440926[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3700548427962440926[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3700548427962440926[186] = 0;
   out_3700548427962440926[187] = 0;
   out_3700548427962440926[188] = 0;
   out_3700548427962440926[189] = 0;
   out_3700548427962440926[190] = 0;
   out_3700548427962440926[191] = 0;
   out_3700548427962440926[192] = 0;
   out_3700548427962440926[193] = 0;
   out_3700548427962440926[194] = 0;
   out_3700548427962440926[195] = 0;
   out_3700548427962440926[196] = 0;
   out_3700548427962440926[197] = 0;
   out_3700548427962440926[198] = 1;
   out_3700548427962440926[199] = 0;
   out_3700548427962440926[200] = 0;
   out_3700548427962440926[201] = 0;
   out_3700548427962440926[202] = 0;
   out_3700548427962440926[203] = 0;
   out_3700548427962440926[204] = 0;
   out_3700548427962440926[205] = 0;
   out_3700548427962440926[206] = 0;
   out_3700548427962440926[207] = 0;
   out_3700548427962440926[208] = 0;
   out_3700548427962440926[209] = 0;
   out_3700548427962440926[210] = 0;
   out_3700548427962440926[211] = 0;
   out_3700548427962440926[212] = 0;
   out_3700548427962440926[213] = 0;
   out_3700548427962440926[214] = 0;
   out_3700548427962440926[215] = 0;
   out_3700548427962440926[216] = 0;
   out_3700548427962440926[217] = 0;
   out_3700548427962440926[218] = 0;
   out_3700548427962440926[219] = 0;
   out_3700548427962440926[220] = 1;
   out_3700548427962440926[221] = 0;
   out_3700548427962440926[222] = 0;
   out_3700548427962440926[223] = 0;
   out_3700548427962440926[224] = 0;
   out_3700548427962440926[225] = 0;
   out_3700548427962440926[226] = 0;
   out_3700548427962440926[227] = 0;
   out_3700548427962440926[228] = 0;
   out_3700548427962440926[229] = 0;
   out_3700548427962440926[230] = 0;
   out_3700548427962440926[231] = 0;
   out_3700548427962440926[232] = 0;
   out_3700548427962440926[233] = 0;
   out_3700548427962440926[234] = 0;
   out_3700548427962440926[235] = 0;
   out_3700548427962440926[236] = 0;
   out_3700548427962440926[237] = 0;
   out_3700548427962440926[238] = 0;
   out_3700548427962440926[239] = 0;
   out_3700548427962440926[240] = 0;
   out_3700548427962440926[241] = 0;
   out_3700548427962440926[242] = 1;
   out_3700548427962440926[243] = 0;
   out_3700548427962440926[244] = 0;
   out_3700548427962440926[245] = 0;
   out_3700548427962440926[246] = 0;
   out_3700548427962440926[247] = 0;
   out_3700548427962440926[248] = 0;
   out_3700548427962440926[249] = 0;
   out_3700548427962440926[250] = 0;
   out_3700548427962440926[251] = 0;
   out_3700548427962440926[252] = 0;
   out_3700548427962440926[253] = 0;
   out_3700548427962440926[254] = 0;
   out_3700548427962440926[255] = 0;
   out_3700548427962440926[256] = 0;
   out_3700548427962440926[257] = 0;
   out_3700548427962440926[258] = 0;
   out_3700548427962440926[259] = 0;
   out_3700548427962440926[260] = 0;
   out_3700548427962440926[261] = 0;
   out_3700548427962440926[262] = 0;
   out_3700548427962440926[263] = 0;
   out_3700548427962440926[264] = 1;
   out_3700548427962440926[265] = 0;
   out_3700548427962440926[266] = 0;
   out_3700548427962440926[267] = 0;
   out_3700548427962440926[268] = 0;
   out_3700548427962440926[269] = 0;
   out_3700548427962440926[270] = 0;
   out_3700548427962440926[271] = 0;
   out_3700548427962440926[272] = 0;
   out_3700548427962440926[273] = 0;
   out_3700548427962440926[274] = 0;
   out_3700548427962440926[275] = 0;
   out_3700548427962440926[276] = 0;
   out_3700548427962440926[277] = 0;
   out_3700548427962440926[278] = 0;
   out_3700548427962440926[279] = 0;
   out_3700548427962440926[280] = 0;
   out_3700548427962440926[281] = 0;
   out_3700548427962440926[282] = 0;
   out_3700548427962440926[283] = 0;
   out_3700548427962440926[284] = 0;
   out_3700548427962440926[285] = 0;
   out_3700548427962440926[286] = 1;
   out_3700548427962440926[287] = 0;
   out_3700548427962440926[288] = 0;
   out_3700548427962440926[289] = 0;
   out_3700548427962440926[290] = 0;
   out_3700548427962440926[291] = 0;
   out_3700548427962440926[292] = 0;
   out_3700548427962440926[293] = 0;
   out_3700548427962440926[294] = 0;
   out_3700548427962440926[295] = 0;
   out_3700548427962440926[296] = 0;
   out_3700548427962440926[297] = 0;
   out_3700548427962440926[298] = 0;
   out_3700548427962440926[299] = 0;
   out_3700548427962440926[300] = 0;
   out_3700548427962440926[301] = 0;
   out_3700548427962440926[302] = 0;
   out_3700548427962440926[303] = 0;
   out_3700548427962440926[304] = 0;
   out_3700548427962440926[305] = 0;
   out_3700548427962440926[306] = 0;
   out_3700548427962440926[307] = 0;
   out_3700548427962440926[308] = 1;
   out_3700548427962440926[309] = 0;
   out_3700548427962440926[310] = 0;
   out_3700548427962440926[311] = 0;
   out_3700548427962440926[312] = 0;
   out_3700548427962440926[313] = 0;
   out_3700548427962440926[314] = 0;
   out_3700548427962440926[315] = 0;
   out_3700548427962440926[316] = 0;
   out_3700548427962440926[317] = 0;
   out_3700548427962440926[318] = 0;
   out_3700548427962440926[319] = 0;
   out_3700548427962440926[320] = 0;
   out_3700548427962440926[321] = 0;
   out_3700548427962440926[322] = 0;
   out_3700548427962440926[323] = 0;
   out_3700548427962440926[324] = 0;
   out_3700548427962440926[325] = 0;
   out_3700548427962440926[326] = 0;
   out_3700548427962440926[327] = 0;
   out_3700548427962440926[328] = 0;
   out_3700548427962440926[329] = 0;
   out_3700548427962440926[330] = 1;
   out_3700548427962440926[331] = 0;
   out_3700548427962440926[332] = 0;
   out_3700548427962440926[333] = 0;
   out_3700548427962440926[334] = 0;
   out_3700548427962440926[335] = 0;
   out_3700548427962440926[336] = 0;
   out_3700548427962440926[337] = 0;
   out_3700548427962440926[338] = 0;
   out_3700548427962440926[339] = 0;
   out_3700548427962440926[340] = 0;
   out_3700548427962440926[341] = 0;
   out_3700548427962440926[342] = 0;
   out_3700548427962440926[343] = 0;
   out_3700548427962440926[344] = 0;
   out_3700548427962440926[345] = 0;
   out_3700548427962440926[346] = 0;
   out_3700548427962440926[347] = 0;
   out_3700548427962440926[348] = 0;
   out_3700548427962440926[349] = 0;
   out_3700548427962440926[350] = 0;
   out_3700548427962440926[351] = 0;
   out_3700548427962440926[352] = 1;
   out_3700548427962440926[353] = 0;
   out_3700548427962440926[354] = 0;
   out_3700548427962440926[355] = 0;
   out_3700548427962440926[356] = 0;
   out_3700548427962440926[357] = 0;
   out_3700548427962440926[358] = 0;
   out_3700548427962440926[359] = 0;
   out_3700548427962440926[360] = 0;
   out_3700548427962440926[361] = 0;
   out_3700548427962440926[362] = 0;
   out_3700548427962440926[363] = 0;
   out_3700548427962440926[364] = 0;
   out_3700548427962440926[365] = 0;
   out_3700548427962440926[366] = 0;
   out_3700548427962440926[367] = 0;
   out_3700548427962440926[368] = 0;
   out_3700548427962440926[369] = 0;
   out_3700548427962440926[370] = 0;
   out_3700548427962440926[371] = 0;
   out_3700548427962440926[372] = 0;
   out_3700548427962440926[373] = 0;
   out_3700548427962440926[374] = 1;
   out_3700548427962440926[375] = 0;
   out_3700548427962440926[376] = 0;
   out_3700548427962440926[377] = 0;
   out_3700548427962440926[378] = 0;
   out_3700548427962440926[379] = 0;
   out_3700548427962440926[380] = 0;
   out_3700548427962440926[381] = 0;
   out_3700548427962440926[382] = 0;
   out_3700548427962440926[383] = 0;
   out_3700548427962440926[384] = 0;
   out_3700548427962440926[385] = 0;
   out_3700548427962440926[386] = 0;
   out_3700548427962440926[387] = 0;
   out_3700548427962440926[388] = 0;
   out_3700548427962440926[389] = 0;
   out_3700548427962440926[390] = 0;
   out_3700548427962440926[391] = 0;
   out_3700548427962440926[392] = 0;
   out_3700548427962440926[393] = 0;
   out_3700548427962440926[394] = 0;
   out_3700548427962440926[395] = 0;
   out_3700548427962440926[396] = 1;
   out_3700548427962440926[397] = 0;
   out_3700548427962440926[398] = 0;
   out_3700548427962440926[399] = 0;
   out_3700548427962440926[400] = 0;
   out_3700548427962440926[401] = 0;
   out_3700548427962440926[402] = 0;
   out_3700548427962440926[403] = 0;
   out_3700548427962440926[404] = 0;
   out_3700548427962440926[405] = 0;
   out_3700548427962440926[406] = 0;
   out_3700548427962440926[407] = 0;
   out_3700548427962440926[408] = 0;
   out_3700548427962440926[409] = 0;
   out_3700548427962440926[410] = 0;
   out_3700548427962440926[411] = 0;
   out_3700548427962440926[412] = 0;
   out_3700548427962440926[413] = 0;
   out_3700548427962440926[414] = 0;
   out_3700548427962440926[415] = 0;
   out_3700548427962440926[416] = 0;
   out_3700548427962440926[417] = 0;
   out_3700548427962440926[418] = 1;
   out_3700548427962440926[419] = 0;
   out_3700548427962440926[420] = 0;
   out_3700548427962440926[421] = 0;
   out_3700548427962440926[422] = 0;
   out_3700548427962440926[423] = 0;
   out_3700548427962440926[424] = 0;
   out_3700548427962440926[425] = 0;
   out_3700548427962440926[426] = 0;
   out_3700548427962440926[427] = 0;
   out_3700548427962440926[428] = 0;
   out_3700548427962440926[429] = 0;
   out_3700548427962440926[430] = 0;
   out_3700548427962440926[431] = 0;
   out_3700548427962440926[432] = 0;
   out_3700548427962440926[433] = 0;
   out_3700548427962440926[434] = 0;
   out_3700548427962440926[435] = 0;
   out_3700548427962440926[436] = 0;
   out_3700548427962440926[437] = 0;
   out_3700548427962440926[438] = 0;
   out_3700548427962440926[439] = 0;
   out_3700548427962440926[440] = 1;
}
void h_4(double *state, double *unused, double *out_2954863483610746457) {
   out_2954863483610746457[0] = state[10] + state[13];
   out_2954863483610746457[1] = state[11] + state[14];
   out_2954863483610746457[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8605248598983381251) {
   out_8605248598983381251[0] = 0;
   out_8605248598983381251[1] = 0;
   out_8605248598983381251[2] = 0;
   out_8605248598983381251[3] = 0;
   out_8605248598983381251[4] = 0;
   out_8605248598983381251[5] = 0;
   out_8605248598983381251[6] = 0;
   out_8605248598983381251[7] = 0;
   out_8605248598983381251[8] = 0;
   out_8605248598983381251[9] = 0;
   out_8605248598983381251[10] = 1;
   out_8605248598983381251[11] = 0;
   out_8605248598983381251[12] = 0;
   out_8605248598983381251[13] = 1;
   out_8605248598983381251[14] = 0;
   out_8605248598983381251[15] = 0;
   out_8605248598983381251[16] = 0;
   out_8605248598983381251[17] = 0;
   out_8605248598983381251[18] = 0;
   out_8605248598983381251[19] = 0;
   out_8605248598983381251[20] = 0;
   out_8605248598983381251[21] = 0;
   out_8605248598983381251[22] = 0;
   out_8605248598983381251[23] = 0;
   out_8605248598983381251[24] = 0;
   out_8605248598983381251[25] = 0;
   out_8605248598983381251[26] = 0;
   out_8605248598983381251[27] = 0;
   out_8605248598983381251[28] = 0;
   out_8605248598983381251[29] = 0;
   out_8605248598983381251[30] = 0;
   out_8605248598983381251[31] = 0;
   out_8605248598983381251[32] = 0;
   out_8605248598983381251[33] = 1;
   out_8605248598983381251[34] = 0;
   out_8605248598983381251[35] = 0;
   out_8605248598983381251[36] = 1;
   out_8605248598983381251[37] = 0;
   out_8605248598983381251[38] = 0;
   out_8605248598983381251[39] = 0;
   out_8605248598983381251[40] = 0;
   out_8605248598983381251[41] = 0;
   out_8605248598983381251[42] = 0;
   out_8605248598983381251[43] = 0;
   out_8605248598983381251[44] = 0;
   out_8605248598983381251[45] = 0;
   out_8605248598983381251[46] = 0;
   out_8605248598983381251[47] = 0;
   out_8605248598983381251[48] = 0;
   out_8605248598983381251[49] = 0;
   out_8605248598983381251[50] = 0;
   out_8605248598983381251[51] = 0;
   out_8605248598983381251[52] = 0;
   out_8605248598983381251[53] = 0;
   out_8605248598983381251[54] = 0;
   out_8605248598983381251[55] = 0;
   out_8605248598983381251[56] = 1;
   out_8605248598983381251[57] = 0;
   out_8605248598983381251[58] = 0;
   out_8605248598983381251[59] = 1;
   out_8605248598983381251[60] = 0;
   out_8605248598983381251[61] = 0;
   out_8605248598983381251[62] = 0;
   out_8605248598983381251[63] = 0;
   out_8605248598983381251[64] = 0;
   out_8605248598983381251[65] = 0;
}
void h_9(double *state, double *unused, double *out_4006723233842345991) {
   out_4006723233842345991[0] = state[10];
   out_4006723233842345991[1] = state[11];
   out_4006723233842345991[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1318029663718933781) {
   out_1318029663718933781[0] = 0;
   out_1318029663718933781[1] = 0;
   out_1318029663718933781[2] = 0;
   out_1318029663718933781[3] = 0;
   out_1318029663718933781[4] = 0;
   out_1318029663718933781[5] = 0;
   out_1318029663718933781[6] = 0;
   out_1318029663718933781[7] = 0;
   out_1318029663718933781[8] = 0;
   out_1318029663718933781[9] = 0;
   out_1318029663718933781[10] = 1;
   out_1318029663718933781[11] = 0;
   out_1318029663718933781[12] = 0;
   out_1318029663718933781[13] = 0;
   out_1318029663718933781[14] = 0;
   out_1318029663718933781[15] = 0;
   out_1318029663718933781[16] = 0;
   out_1318029663718933781[17] = 0;
   out_1318029663718933781[18] = 0;
   out_1318029663718933781[19] = 0;
   out_1318029663718933781[20] = 0;
   out_1318029663718933781[21] = 0;
   out_1318029663718933781[22] = 0;
   out_1318029663718933781[23] = 0;
   out_1318029663718933781[24] = 0;
   out_1318029663718933781[25] = 0;
   out_1318029663718933781[26] = 0;
   out_1318029663718933781[27] = 0;
   out_1318029663718933781[28] = 0;
   out_1318029663718933781[29] = 0;
   out_1318029663718933781[30] = 0;
   out_1318029663718933781[31] = 0;
   out_1318029663718933781[32] = 0;
   out_1318029663718933781[33] = 1;
   out_1318029663718933781[34] = 0;
   out_1318029663718933781[35] = 0;
   out_1318029663718933781[36] = 0;
   out_1318029663718933781[37] = 0;
   out_1318029663718933781[38] = 0;
   out_1318029663718933781[39] = 0;
   out_1318029663718933781[40] = 0;
   out_1318029663718933781[41] = 0;
   out_1318029663718933781[42] = 0;
   out_1318029663718933781[43] = 0;
   out_1318029663718933781[44] = 0;
   out_1318029663718933781[45] = 0;
   out_1318029663718933781[46] = 0;
   out_1318029663718933781[47] = 0;
   out_1318029663718933781[48] = 0;
   out_1318029663718933781[49] = 0;
   out_1318029663718933781[50] = 0;
   out_1318029663718933781[51] = 0;
   out_1318029663718933781[52] = 0;
   out_1318029663718933781[53] = 0;
   out_1318029663718933781[54] = 0;
   out_1318029663718933781[55] = 0;
   out_1318029663718933781[56] = 1;
   out_1318029663718933781[57] = 0;
   out_1318029663718933781[58] = 0;
   out_1318029663718933781[59] = 0;
   out_1318029663718933781[60] = 0;
   out_1318029663718933781[61] = 0;
   out_1318029663718933781[62] = 0;
   out_1318029663718933781[63] = 0;
   out_1318029663718933781[64] = 0;
   out_1318029663718933781[65] = 0;
}
void h_10(double *state, double *unused, double *out_983054053526589981) {
   out_983054053526589981[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_983054053526589981[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_983054053526589981[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8470955799509441157) {
   out_8470955799509441157[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8470955799509441157[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8470955799509441157[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8470955799509441157[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8470955799509441157[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8470955799509441157[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8470955799509441157[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8470955799509441157[7] = 0;
   out_8470955799509441157[8] = 0;
   out_8470955799509441157[9] = 0;
   out_8470955799509441157[10] = 0;
   out_8470955799509441157[11] = 0;
   out_8470955799509441157[12] = 0;
   out_8470955799509441157[13] = 0;
   out_8470955799509441157[14] = 0;
   out_8470955799509441157[15] = 0;
   out_8470955799509441157[16] = 1;
   out_8470955799509441157[17] = 0;
   out_8470955799509441157[18] = 0;
   out_8470955799509441157[19] = 1;
   out_8470955799509441157[20] = 0;
   out_8470955799509441157[21] = 0;
   out_8470955799509441157[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8470955799509441157[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8470955799509441157[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8470955799509441157[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8470955799509441157[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8470955799509441157[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8470955799509441157[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8470955799509441157[29] = 0;
   out_8470955799509441157[30] = 0;
   out_8470955799509441157[31] = 0;
   out_8470955799509441157[32] = 0;
   out_8470955799509441157[33] = 0;
   out_8470955799509441157[34] = 0;
   out_8470955799509441157[35] = 0;
   out_8470955799509441157[36] = 0;
   out_8470955799509441157[37] = 0;
   out_8470955799509441157[38] = 0;
   out_8470955799509441157[39] = 1;
   out_8470955799509441157[40] = 0;
   out_8470955799509441157[41] = 0;
   out_8470955799509441157[42] = 1;
   out_8470955799509441157[43] = 0;
   out_8470955799509441157[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8470955799509441157[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8470955799509441157[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8470955799509441157[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8470955799509441157[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8470955799509441157[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8470955799509441157[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8470955799509441157[51] = 0;
   out_8470955799509441157[52] = 0;
   out_8470955799509441157[53] = 0;
   out_8470955799509441157[54] = 0;
   out_8470955799509441157[55] = 0;
   out_8470955799509441157[56] = 0;
   out_8470955799509441157[57] = 0;
   out_8470955799509441157[58] = 0;
   out_8470955799509441157[59] = 0;
   out_8470955799509441157[60] = 0;
   out_8470955799509441157[61] = 0;
   out_8470955799509441157[62] = 1;
   out_8470955799509441157[63] = 0;
   out_8470955799509441157[64] = 0;
   out_8470955799509441157[65] = 1;
}
void h_12(double *state, double *unused, double *out_889662796816291576) {
   out_889662796816291576[0] = state[0];
   out_889662796816291576[1] = state[1];
   out_889662796816291576[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3460237097683437369) {
   out_3460237097683437369[0] = 1;
   out_3460237097683437369[1] = 0;
   out_3460237097683437369[2] = 0;
   out_3460237097683437369[3] = 0;
   out_3460237097683437369[4] = 0;
   out_3460237097683437369[5] = 0;
   out_3460237097683437369[6] = 0;
   out_3460237097683437369[7] = 0;
   out_3460237097683437369[8] = 0;
   out_3460237097683437369[9] = 0;
   out_3460237097683437369[10] = 0;
   out_3460237097683437369[11] = 0;
   out_3460237097683437369[12] = 0;
   out_3460237097683437369[13] = 0;
   out_3460237097683437369[14] = 0;
   out_3460237097683437369[15] = 0;
   out_3460237097683437369[16] = 0;
   out_3460237097683437369[17] = 0;
   out_3460237097683437369[18] = 0;
   out_3460237097683437369[19] = 0;
   out_3460237097683437369[20] = 0;
   out_3460237097683437369[21] = 0;
   out_3460237097683437369[22] = 0;
   out_3460237097683437369[23] = 1;
   out_3460237097683437369[24] = 0;
   out_3460237097683437369[25] = 0;
   out_3460237097683437369[26] = 0;
   out_3460237097683437369[27] = 0;
   out_3460237097683437369[28] = 0;
   out_3460237097683437369[29] = 0;
   out_3460237097683437369[30] = 0;
   out_3460237097683437369[31] = 0;
   out_3460237097683437369[32] = 0;
   out_3460237097683437369[33] = 0;
   out_3460237097683437369[34] = 0;
   out_3460237097683437369[35] = 0;
   out_3460237097683437369[36] = 0;
   out_3460237097683437369[37] = 0;
   out_3460237097683437369[38] = 0;
   out_3460237097683437369[39] = 0;
   out_3460237097683437369[40] = 0;
   out_3460237097683437369[41] = 0;
   out_3460237097683437369[42] = 0;
   out_3460237097683437369[43] = 0;
   out_3460237097683437369[44] = 0;
   out_3460237097683437369[45] = 0;
   out_3460237097683437369[46] = 1;
   out_3460237097683437369[47] = 0;
   out_3460237097683437369[48] = 0;
   out_3460237097683437369[49] = 0;
   out_3460237097683437369[50] = 0;
   out_3460237097683437369[51] = 0;
   out_3460237097683437369[52] = 0;
   out_3460237097683437369[53] = 0;
   out_3460237097683437369[54] = 0;
   out_3460237097683437369[55] = 0;
   out_3460237097683437369[56] = 0;
   out_3460237097683437369[57] = 0;
   out_3460237097683437369[58] = 0;
   out_3460237097683437369[59] = 0;
   out_3460237097683437369[60] = 0;
   out_3460237097683437369[61] = 0;
   out_3460237097683437369[62] = 0;
   out_3460237097683437369[63] = 0;
   out_3460237097683437369[64] = 0;
   out_3460237097683437369[65] = 0;
}
void h_35(double *state, double *unused, double *out_1539433618062132231) {
   out_1539433618062132231[0] = state[7];
   out_1539433618062132231[1] = state[8];
   out_1539433618062132231[2] = state[9];
}
void H_35(double *state, double *unused, double *out_840229158626405747) {
   out_840229158626405747[0] = 0;
   out_840229158626405747[1] = 0;
   out_840229158626405747[2] = 0;
   out_840229158626405747[3] = 0;
   out_840229158626405747[4] = 0;
   out_840229158626405747[5] = 0;
   out_840229158626405747[6] = 0;
   out_840229158626405747[7] = 1;
   out_840229158626405747[8] = 0;
   out_840229158626405747[9] = 0;
   out_840229158626405747[10] = 0;
   out_840229158626405747[11] = 0;
   out_840229158626405747[12] = 0;
   out_840229158626405747[13] = 0;
   out_840229158626405747[14] = 0;
   out_840229158626405747[15] = 0;
   out_840229158626405747[16] = 0;
   out_840229158626405747[17] = 0;
   out_840229158626405747[18] = 0;
   out_840229158626405747[19] = 0;
   out_840229158626405747[20] = 0;
   out_840229158626405747[21] = 0;
   out_840229158626405747[22] = 0;
   out_840229158626405747[23] = 0;
   out_840229158626405747[24] = 0;
   out_840229158626405747[25] = 0;
   out_840229158626405747[26] = 0;
   out_840229158626405747[27] = 0;
   out_840229158626405747[28] = 0;
   out_840229158626405747[29] = 0;
   out_840229158626405747[30] = 1;
   out_840229158626405747[31] = 0;
   out_840229158626405747[32] = 0;
   out_840229158626405747[33] = 0;
   out_840229158626405747[34] = 0;
   out_840229158626405747[35] = 0;
   out_840229158626405747[36] = 0;
   out_840229158626405747[37] = 0;
   out_840229158626405747[38] = 0;
   out_840229158626405747[39] = 0;
   out_840229158626405747[40] = 0;
   out_840229158626405747[41] = 0;
   out_840229158626405747[42] = 0;
   out_840229158626405747[43] = 0;
   out_840229158626405747[44] = 0;
   out_840229158626405747[45] = 0;
   out_840229158626405747[46] = 0;
   out_840229158626405747[47] = 0;
   out_840229158626405747[48] = 0;
   out_840229158626405747[49] = 0;
   out_840229158626405747[50] = 0;
   out_840229158626405747[51] = 0;
   out_840229158626405747[52] = 0;
   out_840229158626405747[53] = 1;
   out_840229158626405747[54] = 0;
   out_840229158626405747[55] = 0;
   out_840229158626405747[56] = 0;
   out_840229158626405747[57] = 0;
   out_840229158626405747[58] = 0;
   out_840229158626405747[59] = 0;
   out_840229158626405747[60] = 0;
   out_840229158626405747[61] = 0;
   out_840229158626405747[62] = 0;
   out_840229158626405747[63] = 0;
   out_840229158626405747[64] = 0;
   out_840229158626405747[65] = 0;
}
void h_32(double *state, double *unused, double *out_8198149920719328221) {
   out_8198149920719328221[0] = state[3];
   out_8198149920719328221[1] = state[4];
   out_8198149920719328221[2] = state[5];
   out_8198149920719328221[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6883426051321673477) {
   out_6883426051321673477[0] = 0;
   out_6883426051321673477[1] = 0;
   out_6883426051321673477[2] = 0;
   out_6883426051321673477[3] = 1;
   out_6883426051321673477[4] = 0;
   out_6883426051321673477[5] = 0;
   out_6883426051321673477[6] = 0;
   out_6883426051321673477[7] = 0;
   out_6883426051321673477[8] = 0;
   out_6883426051321673477[9] = 0;
   out_6883426051321673477[10] = 0;
   out_6883426051321673477[11] = 0;
   out_6883426051321673477[12] = 0;
   out_6883426051321673477[13] = 0;
   out_6883426051321673477[14] = 0;
   out_6883426051321673477[15] = 0;
   out_6883426051321673477[16] = 0;
   out_6883426051321673477[17] = 0;
   out_6883426051321673477[18] = 0;
   out_6883426051321673477[19] = 0;
   out_6883426051321673477[20] = 0;
   out_6883426051321673477[21] = 0;
   out_6883426051321673477[22] = 0;
   out_6883426051321673477[23] = 0;
   out_6883426051321673477[24] = 0;
   out_6883426051321673477[25] = 0;
   out_6883426051321673477[26] = 1;
   out_6883426051321673477[27] = 0;
   out_6883426051321673477[28] = 0;
   out_6883426051321673477[29] = 0;
   out_6883426051321673477[30] = 0;
   out_6883426051321673477[31] = 0;
   out_6883426051321673477[32] = 0;
   out_6883426051321673477[33] = 0;
   out_6883426051321673477[34] = 0;
   out_6883426051321673477[35] = 0;
   out_6883426051321673477[36] = 0;
   out_6883426051321673477[37] = 0;
   out_6883426051321673477[38] = 0;
   out_6883426051321673477[39] = 0;
   out_6883426051321673477[40] = 0;
   out_6883426051321673477[41] = 0;
   out_6883426051321673477[42] = 0;
   out_6883426051321673477[43] = 0;
   out_6883426051321673477[44] = 0;
   out_6883426051321673477[45] = 0;
   out_6883426051321673477[46] = 0;
   out_6883426051321673477[47] = 0;
   out_6883426051321673477[48] = 0;
   out_6883426051321673477[49] = 1;
   out_6883426051321673477[50] = 0;
   out_6883426051321673477[51] = 0;
   out_6883426051321673477[52] = 0;
   out_6883426051321673477[53] = 0;
   out_6883426051321673477[54] = 0;
   out_6883426051321673477[55] = 0;
   out_6883426051321673477[56] = 0;
   out_6883426051321673477[57] = 0;
   out_6883426051321673477[58] = 0;
   out_6883426051321673477[59] = 0;
   out_6883426051321673477[60] = 0;
   out_6883426051321673477[61] = 0;
   out_6883426051321673477[62] = 0;
   out_6883426051321673477[63] = 0;
   out_6883426051321673477[64] = 0;
   out_6883426051321673477[65] = 0;
   out_6883426051321673477[66] = 0;
   out_6883426051321673477[67] = 0;
   out_6883426051321673477[68] = 0;
   out_6883426051321673477[69] = 0;
   out_6883426051321673477[70] = 0;
   out_6883426051321673477[71] = 0;
   out_6883426051321673477[72] = 1;
   out_6883426051321673477[73] = 0;
   out_6883426051321673477[74] = 0;
   out_6883426051321673477[75] = 0;
   out_6883426051321673477[76] = 0;
   out_6883426051321673477[77] = 0;
   out_6883426051321673477[78] = 0;
   out_6883426051321673477[79] = 0;
   out_6883426051321673477[80] = 0;
   out_6883426051321673477[81] = 0;
   out_6883426051321673477[82] = 0;
   out_6883426051321673477[83] = 0;
   out_6883426051321673477[84] = 0;
   out_6883426051321673477[85] = 0;
   out_6883426051321673477[86] = 0;
   out_6883426051321673477[87] = 0;
}
void h_13(double *state, double *unused, double *out_5269332807279174469) {
   out_5269332807279174469[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5269332807279174469[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5269332807279174469[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3916234011707655409) {
   out_3916234011707655409[0] = 0;
   out_3916234011707655409[1] = 0;
   out_3916234011707655409[2] = 0;
   out_3916234011707655409[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3916234011707655409[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3916234011707655409[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3916234011707655409[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3916234011707655409[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3916234011707655409[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3916234011707655409[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3916234011707655409[10] = 0;
   out_3916234011707655409[11] = 0;
   out_3916234011707655409[12] = 0;
   out_3916234011707655409[13] = 0;
   out_3916234011707655409[14] = 0;
   out_3916234011707655409[15] = 0;
   out_3916234011707655409[16] = 0;
   out_3916234011707655409[17] = 0;
   out_3916234011707655409[18] = 0;
   out_3916234011707655409[19] = 0;
   out_3916234011707655409[20] = 0;
   out_3916234011707655409[21] = 0;
   out_3916234011707655409[22] = 0;
   out_3916234011707655409[23] = 0;
   out_3916234011707655409[24] = 0;
   out_3916234011707655409[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3916234011707655409[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3916234011707655409[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3916234011707655409[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3916234011707655409[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3916234011707655409[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3916234011707655409[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3916234011707655409[32] = 0;
   out_3916234011707655409[33] = 0;
   out_3916234011707655409[34] = 0;
   out_3916234011707655409[35] = 0;
   out_3916234011707655409[36] = 0;
   out_3916234011707655409[37] = 0;
   out_3916234011707655409[38] = 0;
   out_3916234011707655409[39] = 0;
   out_3916234011707655409[40] = 0;
   out_3916234011707655409[41] = 0;
   out_3916234011707655409[42] = 0;
   out_3916234011707655409[43] = 0;
   out_3916234011707655409[44] = 0;
   out_3916234011707655409[45] = 0;
   out_3916234011707655409[46] = 0;
   out_3916234011707655409[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3916234011707655409[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3916234011707655409[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3916234011707655409[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3916234011707655409[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3916234011707655409[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3916234011707655409[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3916234011707655409[54] = 0;
   out_3916234011707655409[55] = 0;
   out_3916234011707655409[56] = 0;
   out_3916234011707655409[57] = 0;
   out_3916234011707655409[58] = 0;
   out_3916234011707655409[59] = 0;
   out_3916234011707655409[60] = 0;
   out_3916234011707655409[61] = 0;
   out_3916234011707655409[62] = 0;
   out_3916234011707655409[63] = 0;
   out_3916234011707655409[64] = 0;
   out_3916234011707655409[65] = 0;
}
void h_14(double *state, double *unused, double *out_4006723233842345991) {
   out_4006723233842345991[0] = state[10];
   out_4006723233842345991[1] = state[11];
   out_4006723233842345991[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1318029663718933781) {
   out_1318029663718933781[0] = 0;
   out_1318029663718933781[1] = 0;
   out_1318029663718933781[2] = 0;
   out_1318029663718933781[3] = 0;
   out_1318029663718933781[4] = 0;
   out_1318029663718933781[5] = 0;
   out_1318029663718933781[6] = 0;
   out_1318029663718933781[7] = 0;
   out_1318029663718933781[8] = 0;
   out_1318029663718933781[9] = 0;
   out_1318029663718933781[10] = 1;
   out_1318029663718933781[11] = 0;
   out_1318029663718933781[12] = 0;
   out_1318029663718933781[13] = 0;
   out_1318029663718933781[14] = 0;
   out_1318029663718933781[15] = 0;
   out_1318029663718933781[16] = 0;
   out_1318029663718933781[17] = 0;
   out_1318029663718933781[18] = 0;
   out_1318029663718933781[19] = 0;
   out_1318029663718933781[20] = 0;
   out_1318029663718933781[21] = 0;
   out_1318029663718933781[22] = 0;
   out_1318029663718933781[23] = 0;
   out_1318029663718933781[24] = 0;
   out_1318029663718933781[25] = 0;
   out_1318029663718933781[26] = 0;
   out_1318029663718933781[27] = 0;
   out_1318029663718933781[28] = 0;
   out_1318029663718933781[29] = 0;
   out_1318029663718933781[30] = 0;
   out_1318029663718933781[31] = 0;
   out_1318029663718933781[32] = 0;
   out_1318029663718933781[33] = 1;
   out_1318029663718933781[34] = 0;
   out_1318029663718933781[35] = 0;
   out_1318029663718933781[36] = 0;
   out_1318029663718933781[37] = 0;
   out_1318029663718933781[38] = 0;
   out_1318029663718933781[39] = 0;
   out_1318029663718933781[40] = 0;
   out_1318029663718933781[41] = 0;
   out_1318029663718933781[42] = 0;
   out_1318029663718933781[43] = 0;
   out_1318029663718933781[44] = 0;
   out_1318029663718933781[45] = 0;
   out_1318029663718933781[46] = 0;
   out_1318029663718933781[47] = 0;
   out_1318029663718933781[48] = 0;
   out_1318029663718933781[49] = 0;
   out_1318029663718933781[50] = 0;
   out_1318029663718933781[51] = 0;
   out_1318029663718933781[52] = 0;
   out_1318029663718933781[53] = 0;
   out_1318029663718933781[54] = 0;
   out_1318029663718933781[55] = 0;
   out_1318029663718933781[56] = 1;
   out_1318029663718933781[57] = 0;
   out_1318029663718933781[58] = 0;
   out_1318029663718933781[59] = 0;
   out_1318029663718933781[60] = 0;
   out_1318029663718933781[61] = 0;
   out_1318029663718933781[62] = 0;
   out_1318029663718933781[63] = 0;
   out_1318029663718933781[64] = 0;
   out_1318029663718933781[65] = 0;
}
void h_33(double *state, double *unused, double *out_7028159383484897449) {
   out_7028159383484897449[0] = state[16];
   out_7028159383484897449[1] = state[17];
   out_7028159383484897449[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9090386939062242934) {
   out_9090386939062242934[0] = 0;
   out_9090386939062242934[1] = 0;
   out_9090386939062242934[2] = 0;
   out_9090386939062242934[3] = 0;
   out_9090386939062242934[4] = 0;
   out_9090386939062242934[5] = 0;
   out_9090386939062242934[6] = 0;
   out_9090386939062242934[7] = 0;
   out_9090386939062242934[8] = 0;
   out_9090386939062242934[9] = 0;
   out_9090386939062242934[10] = 0;
   out_9090386939062242934[11] = 0;
   out_9090386939062242934[12] = 0;
   out_9090386939062242934[13] = 0;
   out_9090386939062242934[14] = 0;
   out_9090386939062242934[15] = 0;
   out_9090386939062242934[16] = 1;
   out_9090386939062242934[17] = 0;
   out_9090386939062242934[18] = 0;
   out_9090386939062242934[19] = 0;
   out_9090386939062242934[20] = 0;
   out_9090386939062242934[21] = 0;
   out_9090386939062242934[22] = 0;
   out_9090386939062242934[23] = 0;
   out_9090386939062242934[24] = 0;
   out_9090386939062242934[25] = 0;
   out_9090386939062242934[26] = 0;
   out_9090386939062242934[27] = 0;
   out_9090386939062242934[28] = 0;
   out_9090386939062242934[29] = 0;
   out_9090386939062242934[30] = 0;
   out_9090386939062242934[31] = 0;
   out_9090386939062242934[32] = 0;
   out_9090386939062242934[33] = 0;
   out_9090386939062242934[34] = 0;
   out_9090386939062242934[35] = 0;
   out_9090386939062242934[36] = 0;
   out_9090386939062242934[37] = 0;
   out_9090386939062242934[38] = 0;
   out_9090386939062242934[39] = 1;
   out_9090386939062242934[40] = 0;
   out_9090386939062242934[41] = 0;
   out_9090386939062242934[42] = 0;
   out_9090386939062242934[43] = 0;
   out_9090386939062242934[44] = 0;
   out_9090386939062242934[45] = 0;
   out_9090386939062242934[46] = 0;
   out_9090386939062242934[47] = 0;
   out_9090386939062242934[48] = 0;
   out_9090386939062242934[49] = 0;
   out_9090386939062242934[50] = 0;
   out_9090386939062242934[51] = 0;
   out_9090386939062242934[52] = 0;
   out_9090386939062242934[53] = 0;
   out_9090386939062242934[54] = 0;
   out_9090386939062242934[55] = 0;
   out_9090386939062242934[56] = 0;
   out_9090386939062242934[57] = 0;
   out_9090386939062242934[58] = 0;
   out_9090386939062242934[59] = 0;
   out_9090386939062242934[60] = 0;
   out_9090386939062242934[61] = 0;
   out_9090386939062242934[62] = 1;
   out_9090386939062242934[63] = 0;
   out_9090386939062242934[64] = 0;
   out_9090386939062242934[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_448016370503331297) {
  H(in_vec, out_448016370503331297);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1664245642397186294) {
  err_fun(nom_x, delta_x, out_1664245642397186294);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7089911323146907467) {
  inv_err_fun(nom_x, true_x, out_7089911323146907467);
}
void live_H_mod_fun(double *state, double *out_6934058908312638129) {
  H_mod_fun(state, out_6934058908312638129);
}
void live_f_fun(double *state, double dt, double *out_2052326614994539115) {
  f_fun(state,  dt, out_2052326614994539115);
}
void live_F_fun(double *state, double dt, double *out_3700548427962440926) {
  F_fun(state,  dt, out_3700548427962440926);
}
void live_h_4(double *state, double *unused, double *out_2954863483610746457) {
  h_4(state, unused, out_2954863483610746457);
}
void live_H_4(double *state, double *unused, double *out_8605248598983381251) {
  H_4(state, unused, out_8605248598983381251);
}
void live_h_9(double *state, double *unused, double *out_4006723233842345991) {
  h_9(state, unused, out_4006723233842345991);
}
void live_H_9(double *state, double *unused, double *out_1318029663718933781) {
  H_9(state, unused, out_1318029663718933781);
}
void live_h_10(double *state, double *unused, double *out_983054053526589981) {
  h_10(state, unused, out_983054053526589981);
}
void live_H_10(double *state, double *unused, double *out_8470955799509441157) {
  H_10(state, unused, out_8470955799509441157);
}
void live_h_12(double *state, double *unused, double *out_889662796816291576) {
  h_12(state, unused, out_889662796816291576);
}
void live_H_12(double *state, double *unused, double *out_3460237097683437369) {
  H_12(state, unused, out_3460237097683437369);
}
void live_h_35(double *state, double *unused, double *out_1539433618062132231) {
  h_35(state, unused, out_1539433618062132231);
}
void live_H_35(double *state, double *unused, double *out_840229158626405747) {
  H_35(state, unused, out_840229158626405747);
}
void live_h_32(double *state, double *unused, double *out_8198149920719328221) {
  h_32(state, unused, out_8198149920719328221);
}
void live_H_32(double *state, double *unused, double *out_6883426051321673477) {
  H_32(state, unused, out_6883426051321673477);
}
void live_h_13(double *state, double *unused, double *out_5269332807279174469) {
  h_13(state, unused, out_5269332807279174469);
}
void live_H_13(double *state, double *unused, double *out_3916234011707655409) {
  H_13(state, unused, out_3916234011707655409);
}
void live_h_14(double *state, double *unused, double *out_4006723233842345991) {
  h_14(state, unused, out_4006723233842345991);
}
void live_H_14(double *state, double *unused, double *out_1318029663718933781) {
  H_14(state, unused, out_1318029663718933781);
}
void live_h_33(double *state, double *unused, double *out_7028159383484897449) {
  h_33(state, unused, out_7028159383484897449);
}
void live_H_33(double *state, double *unused, double *out_9090386939062242934) {
  H_33(state, unused, out_9090386939062242934);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
